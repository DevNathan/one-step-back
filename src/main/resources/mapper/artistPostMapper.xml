<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.onestepback.mapper.ArtistPostMapper">
    <select id="selectCountOfPost" resultType="int">
        SELECT COUNT(MEMBER_ID)
        FROM VIEW_ARTIST_POST
        WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="select3Posts" resultType="artistPostDTO">
        SELECT *
        FROM (SELECT A.ID,
                     A.MEMBER_ID,
                     A.POST_TITLE,
                     A.POST_SUBTITLE,
                     A.POST_CONTENT,
                     A.POST_CATEGORY,
                     A.POST_VIEW_COUNT,
                     A.POST_WRITE_TIME,
                     A.POST_UPDATE_TIME,
                     M.MEMBER_NICKNAME,
                     M.MEMBER_KAKAO_PROFILE_URL,
                     M.MEMBER_PROFILE_NAME,
                     M.MEMBER_PROFILE_PATH,
                     (SELECT COUNT(L.POST_ID)
                      FROM TBL_POST_LIKE L
                      WHERE L.POST_ID = A.ID)                                                AS LIKE_COUNT,
                     (SELECT COUNT(R.POST_ID) FROM TBL_POST_REPLY R WHERE R.POST_ID = A.ID)  AS REPLY_COUNT,
                     (SELECT F.FILE_NAME
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_NAME,
                     (SELECT F.FILE_PATH
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_PATH
              FROM VIEW_ARTIST_POST A
                       JOIN TBL_MEMBER M ON A.MEMBER_ID = M.ID
              WHERE MEMBER_ID = #{memberId} AND A.POST_READABLE != 'DISABLE'
              ORDER BY POST_WRITE_TIME DESC)
        WHERE ROWNUM &lt;= 3
    </select>

    <select id="selectAll" resultType="artistPostDTO">
        SELECT ID,
               MEMBER_ID,
               POST_TITLE,
               POST_SUBTITLE,
               POST_CONTENT,
               POST_CATEGORY,
               POST_VIEW_COUNT,
               POST_WRITE_TIME,
               MEMBER_NICKNAME,
               MEMBER_KAKAO_PROFILE_URL,
               MEMBER_PROFILE_NAME,
               MEMBER_PROFILE_PATH,
               LIKE_COUNT,
               REPLY_COUNT,
               FILE_NAME,
               FILE_PATH
        FROM (SELECT ROWNUM R, P1.*
              FROM (SELECT A.ID,
                           A.MEMBER_ID,
                           A.POST_TITLE,
                           A.POST_SUBTITLE,
                           A.POST_CONTENT,
                           A.POST_CATEGORY,
                           A.POST_VIEW_COUNT,
                           A.POST_WRITE_TIME,
                           M.MEMBER_NICKNAME,
                           M.MEMBER_KAKAO_PROFILE_URL,
                           M.MEMBER_PROFILE_NAME,
                           M.MEMBER_PROFILE_PATH,
                           (SELECT COUNT(L.POST_ID)
                            FROM TBL_POST_LIKE L
                            WHERE L.POST_ID = A.ID)                                                AS LIKE_COUNT,
                           (SELECT COUNT(R.POST_ID)
                            FROM TBL_POST_REPLY R
                            WHERE R.POST_ID = A.ID)                                                AS REPLY_COUNT,
                           (SELECT F.FILE_NAME
                            FROM TBL_POST_FILE F
                            WHERE F.POST_ID = A.ID
                              AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_NAME,
                           (SELECT F.FILE_PATH
                            FROM TBL_POST_FILE F
                            WHERE F.POST_ID = A.ID
                              AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_PATH
                    FROM VIEW_ARTIST_POST A
                             JOIN TBL_MEMBER M ON A.MEMBER_ID = M.ID
                    WHERE MEMBER_ID = #{memberId} AND A.POST_READABLE != 'DISABLE'
                    ORDER BY POST_WRITE_TIME DESC) P1
              WHERE ROWNUM &lt;= #{pagination.endRow}) P2
        WHERE P2.R >= #{pagination.startRow}
    </select>

    <insert id="insertPost">
        <selectKey keyProperty="id" order="BEFORE" resultType="Long">
            SELECT SEQ_POST.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_POST(ID, MEMBER_ID, POST_TITLE, POST_SUBTITLE, POST_CONTENT, POST_CATEGORY, POST_WRITE_TIME)
        VALUES (#{id}, #{memberId}, #{postTitle}, #{postSubtitle}, #{postContent}, #{postCategory}, CURRENT_TIMESTAMP)
    </insert>

    <insert id="insertArtistPost">
        INSERT INTO TBL_ARTIST_POST(POST_ID)
        VALUES (#{postId})
    </insert>

    <select id="select" resultType="artistPostDTO">
        SELECT A.ID,
               A.MEMBER_ID,
               A.POST_TITLE,
               A.POST_SUBTITLE,
               A.POST_CONTENT,
               A.POST_CATEGORY,
               A.POST_VIEW_COUNT,
               A.POST_WRITE_TIME,
               M.MEMBER_NICKNAME,
               M.MEMBER_KAKAO_PROFILE_URL,
               M.MEMBER_PROFILE_NAME,
               M.MEMBER_PROFILE_PATH,
               (SELECT COUNT(L.POST_ID)
                FROM TBL_POST_LIKE L
                WHERE L.POST_ID = A.ID) AS LIKE_COUNT,
               (SELECT COUNT(R.POST_ID)
                FROM TBL_POST_REPLY R
                WHERE R.POST_ID = A.ID) AS REPLY_COUNT
        FROM VIEW_ARTIST_POST A
                 JOIN TBL_MEMBER M ON A.MEMBER_ID = M.ID
        WHERE A.ID = #{id}
    </select>

    <select id="selectPrevPost" resultType="artistPostDTO">
        SELECT *
        FROM (SELECT ID,
                     POST_TITLE,
                     POST_SUBTITLE,
                     (SELECT F.FILE_NAME
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_NAME,
                     (SELECT F.FILE_PATH
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_PATH
              FROM VIEW_ARTIST_POST A
              WHERE POST_WRITE_TIME &lt; #{postWriteTime}
                AND ID != #{id}
                AND MEMBER_ID = #{memberId}
                AND A.POST_READABLE != 'DISABLE'
              ORDER BY POST_WRITE_TIME DESC)
        WHERE ROWNUM = 1
    </select>

    <select id="selectNextPost" resultType="artistPostDTO">
        SELECT *
        FROM (SELECT ID,
                     POST_TITLE,
                     POST_SUBTITLE,
                     (SELECT F.FILE_NAME
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_NAME,
                     (SELECT F.FILE_PATH
                      FROM TBL_POST_FILE F
                      WHERE F.POST_ID = A.ID
                        AND F.ID = (SELECT MIN(ID) FROM TBL_POST_FILE WHERE POST_ID = A.ID)) AS FILE_PATH
              FROM VIEW_ARTIST_POST A
              WHERE POST_WRITE_TIME > #{postWriteTime}
                AND ID != #{id}
                AND MEMBER_ID = #{memberId}
                AND A.POST_READABLE != 'DISABLE'
              ORDER BY POST_WRITE_TIME)
        WHERE ROWNUM = 1
    </select>

    <update id="update">
        UPDATE TBL_POST
        SET POST_TITLE = #{postTitle},
            POST_SUBTITLE = #{postSubtitle},
            POST_CONTENT = #{postContent},
            POST_CATEGORY = #{postCategory},
            POST_UPDATE_TIME = CURRENT_TIMESTAMP
        WHERE ID = #{id}
    </update>
</mapper>